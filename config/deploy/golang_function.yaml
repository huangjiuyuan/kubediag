apiVersion: diagnosis.kubediag.org/v1
kind: Operation
metadata:
  name: golang-function
spec:
  processor:
    function:
      codeSource:
        handler.go: |
          package function

          import (
            "encoding/json"
            "fmt"
            "net/http"

            handler "github.com/openfaas/templates-sdk/go-http"
          )

          // Handle a function invocation
          func Handle(req handler.Request) (handler.Response, error) {
            var err error
            response := handler.Response{
              Body:       []byte{},
              StatusCode: http.StatusBadRequest,
            }

            contexts := make(map[string]string)
            err = json.Unmarshal(req.Body, &contexts)
            if err != nil {
              return response, fmt.Errorf("failed to unmarshal body: %v", err)
            }

            /* ---- Your code here ---- */
            contexts["a"] = "1"
            contexts["b"] = "2"
            /* ------------------------ */

            raw, err := json.Marshal(contexts)
            if err != nil {
              return response, fmt.Errorf("failed to marshal data: %v", err)
            }

            response.Body = raw
            response.StatusCode = http.StatusOK
            return response, err
          }
        
        go.mod: |
          module handler/function

          go 1.18

          require github.com/openfaas/templates-sdk/go-http v0.0.0-20220408082716-5981c545cb03

      runtime: golang-http
    timeoutSeconds: 120
