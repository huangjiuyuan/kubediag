
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: diagnoses.diagnosis.kubediag.org
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.operationSet
    name: OperationSet
    type: string
  - JSONPath: .status.phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: diagnosis.kubediag.org
  names:
    kind: Diagnosis
    listKind: DiagnosisList
    plural: diagnoses
    singular: diagnosis
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Diagnosis is the Schema for the diagnoses API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiagnosisSpec defines the desired state of Diagnosis.
          properties:
            operationSet:
              description: OperationSet is the name of operation set which represents
                diagnosis pipeline to be executed.
              type: string
            parameters:
              additionalProperties:
                type: string
              description: Parameters is a set of the parameters to be passed to operations.
                Parameters and OperationResults are encoded into a json object and
                sent to operation processor when running diagnosis.
              type: object
            targetSelector:
              description: TargetSelector contains information to calculate target
                node to schedule tasks on.
              properties:
                nodeNames:
                  description: NodeNames specifies nodes which tasks should be scheduled
                    on.
                  items:
                    type: string
                  type: array
                nodeSelector:
                  description: NodeSelector queries over a set of nodes. Tasks will
                    be scheduled on the result nodes of matched nodes.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                podReferences:
                  description: PodReferences specifies pods which tasks should be
                    scheduled on the same node.
                  items:
                    description: PodReference contains details of the target pod.
                    properties:
                      container:
                        description: Container specifies name of the target container.
                        type: string
                      name:
                        description: Name specifies the name of a kubernetes api resource.
                        type: string
                      namespace:
                        description: Namespace specifies the namespace of a kubernetes
                          api resource.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  type: array
                podSelector:
                  description: PodSelector queries over a set of pods. A tasks will
                    be scheduled on the node which any matched pod is on.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
          required:
          - operationSet
          type: object
        status:
          description: DiagnosisStatus defines the observed state of Diagnosis.
          properties:
            checkpoint:
              description: Checkpoint is the checkpoint for resuming unfinished diagnosis.
              properties:
                active:
                  description: The number of pending and running tasks.
                  type: integer
                desired:
                  description: The number of desired tasks.
                  type: integer
                failed:
                  description: The number of tasks which reached phase Succeeded.
                  type: integer
                nodeIndex:
                  description: NodeIndex is the index of current node in path.
                  type: integer
                pathIndex:
                  description: PathIndex is the index of current path in operation
                    set status.
                  type: integer
                succeeded:
                  description: The number of tasks which reached phase Failed.
                  type: integer
                synchronizedTasks:
                  description: SynchronizedTasks contains a list of synchronized task
                    of current checkpoint.
                  items:
                    type: string
                  type: array
              required:
              - active
              - desired
              - failed
              - nodeIndex
              - pathIndex
              - succeeded
              type: object
            conditions:
              description: Conditions contains current service state of diagnosis.
              items:
                description: DiagnosisCondition contains details for the current condition
                  of this diagnosis.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime specifies last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable message indicating details
                      about last transition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True,
                      False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            context:
              description: Context stores all information generated during the diagnosis
                execution.
              properties:
                operations:
                  additionalProperties:
                    additionalProperties:
                      additionalProperties:
                        type: string
                      description: TaskContext contains the results of a task.
                      type: object
                    description: OperationContext contains the results of an operation.
                    type: object
                  description: Operations contains the results of a diagnosis.
                  type: object
                parameters:
                  additionalProperties:
                    type: string
                  description: Parameters is a set of the parameters defined in the
                    spec.
                  type: object
              type: object
            failedPaths:
              description: FailedPaths contains all failed paths in diagnosis pipeline.
                The last node in the path is the one which fails to execute operation.
              items:
                description: Path represents a linear ordering of nodes along the
                  direction of every directed edge.
                items:
                  description: Node is a node in the directed acyclic graph. It contains
                    details of the operation.
                  properties:
                    dependences:
                      description: Dependences is the list of depended node ids.
                      items:
                        type: integer
                      type: array
                    id:
                      description: ID is the unique identifier of the node. It is
                        identical to node index in adjacency list and set by admission
                        webhook server.
                      type: integer
                    operation:
                      description: Operation is the name of operation running on the
                        node. It is empty if the node is the first in the list.
                      type: string
                    to:
                      description: To is the list of node ids this node links to.
                      items:
                        type: integer
                      type: array
                  type: object
                type: array
              type: array
            nodeNames:
              description: NodeNames contains all nodes which tasks should be scheduled
                on.
              items:
                type: string
              type: array
            phase:
              description: "Phase is a simple, high-level summary of where the diagnosis
                is in its lifecycle. The conditions array, the reason and message
                fields contain more detail about the pod's status. There are five
                possible phase values: \n DiagnosisPending: The diagnosis has been
                accepted by the system, but no operation has been started. DiagnosisRunning:
                The diagnosis has been bound to a node and one of the operations have
                been started. At least one operation is still running. DiagnosisSucceeded:
                All operations in some path have voluntarily terminated with a response
                code of 200, and the system is not going to execute rest operations.
                DiagnosisFailed: All paths in the graph have terminated, and at least
                one operation in each path terminated in a failure. DiagnosisUnknown:
                For some reason the state of the diagnosis could not be obtained,
                typically due to an error in communicating with the host of the diagnosis."
              type: string
            startTime:
              description: StartTime is RFC 3339 date and time at which the object
                was acknowledged by the system.
              format: date-time
              type: string
            succeededPath:
              description: SucceededPath is the succeeded paths in diagnosis pipeline.
              items:
                description: Node is a node in the directed acyclic graph. It contains
                  details of the operation.
                properties:
                  dependences:
                    description: Dependences is the list of depended node ids.
                    items:
                      type: integer
                    type: array
                  id:
                    description: ID is the unique identifier of the node. It is identical
                      to node index in adjacency list and set by admission webhook
                      server.
                    type: integer
                  operation:
                    description: Operation is the name of operation running on the
                      node. It is empty if the node is the first in the list.
                    type: string
                  to:
                    description: To is the list of node ids this node links to.
                    items:
                      type: integer
                    type: array
                type: object
              type: array
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
